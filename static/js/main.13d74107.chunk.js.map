{"version":3,"sources":["components/_layouts/BasicLayout/BasicLayout.js","components/_elements/Tag/Tag.js","components/_elements/Heading/Heading.js","components/_modules/Sidebar/Sidebar.js","components/_elements/Button/Button.js","components/_modules/Editbar/Editbar.js","components/_pages/Home/Home.js","AppRouter.js","App.js","index.js"],"names":["BasicLayout","className","instance","Tag","forwardRef","props","tagRef","ref","useRef","useImperativeHandle","redraw","initialize","reload","current","useCallback","firstChild","removeChild","TagLibrary","tag","container","data","format","options","err","update","option","setOption","useEffect","Heading","type","align","children","Type","style","textAlign","Sidebar","categoryOptions","topLinkCategory","none","default","bottomLinkCategory","topTagCategory","bottomTagCategory","POS","handleChange","event","itemValue","itemName","target","name","checked","Number","value","updateOptions","showOptions","action","htmlFor","id","defaultValue","onChange","Object","keys","map","key","compactRows","showTopLinksOnMove","showBottomLinksOnMove","defaultChecked","showTopMainLabel","showTopArgLabels","showBottomMainLabel","showBottomArgLabels","rowEdgePadding","placeholder","rowVerticalPadding","rowExtraTopPadding","wordPadding","wordPunctPadding","wordTopTagPadding","wordBottomTagPadding","wordTagLineLength","wordBraceThreshold","linkSlotInterval","linkHandlePadding","linkCurveWidth","linkArrowWidth","STYLES","SIZES","Button","buttonStyle","buttonSize","loading","rest","checkButtonStyle","includes","checkButtonSize","init","Editbar","initialParser","Odin","useState","activeParser","setActiveParser","JSON","stringify","undefined","activeDataParser","setActiveDataParser","updateParser","parse","tagParsers","MultipleMentionsOdin","Odin2","ParagraphOdin1","PassageOdin1","PassageOdin2","SentenceOdin1","SentenceOdin2","SentenceOdin3","SentenceOdinson1","SentenceOdinson2","showEditbar","e","onClick","Home","setShowOptions","setShowEditbar","tagDefaultColours","tagOptions","setTagOptions","tagRedraw","bind","setTimeout","AppRouter","path","element","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.13d74107.chunk.js","sourcesContent":["import React from 'react';\nimport { Outlet } from 'react-router-dom';\n\n// import Navbar from 'Modules/Navbar/Navbar';\n\nimport './BasicLayout.scss';\n\n// Basic Layout with navigation and router content from children (Outlet)\nconst BasicLayout = () => {\n    return (\n        <div className=\"layout-basic\">\n            {/*<Navbar />*/}\n            <Outlet />\n        </div>\n    );\n};\n\nexport default BasicLayout;\n","import React, { useEffect, useRef, forwardRef, useImperativeHandle, useCallback } from \"react\";\r\nimport {default as TagLibrary} from \"text-annotation-graphs\";\r\n\r\nimport \"text-annotation-graphs/dist/tag/css/tag.min.css\"\r\nimport \"./Tag.scss\"\r\n\r\nlet instance = null;\r\nconst Tag = forwardRef((props, tagRef) => {\r\n    const ref = useRef();\r\n\r\n    useImperativeHandle(tagRef, () => ({\r\n        redraw() {\r\n            initialize();\r\n            if (instance) {\r\n                instance.redraw();\r\n            }\r\n        },\r\n        reload() {\r\n            if (instance) {\r\n                // TODO: reload tag\r\n                tagRef.current.redraw();\r\n            }\r\n        }\r\n    }));\r\n\r\n    const initialize = useCallback(() => {\r\n        // make sure the div is clean\r\n        while (ref.current.firstChild) {\r\n            ref.current.removeChild(ref.current.firstChild);\r\n        }\r\n\r\n        // initialize the tag instance\r\n        try {\r\n            instance = TagLibrary.tag({\r\n                container: ref.current,\r\n                data: props.data,\r\n                format: \"odin\",\r\n\r\n                options: { ...props.options }\r\n            });\r\n        } catch(err) {\r\n            // TODO: treat error here\r\n        }\r\n\r\n    }, [props])\r\n\r\n    const update = useCallback(() => {\r\n        if (instance) {\r\n            for (let option in props.options) {\r\n                instance.setOption(option, props.options[option]);\r\n            }\r\n\r\n            tagRef.current.redraw();\r\n        }\r\n    }, [props, tagRef])\r\n\r\n    useEffect(() => {\r\n        if (!instance) {\r\n            initialize();\r\n        } else {\r\n            update();\r\n        }\r\n    }, [initialize, update]);\r\n\r\n    return (\r\n        <div className=\"tag\">\r\n            <div className=\"tag-svg\" ref={ref}/>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Tag;","import React from 'react';\n\nimport './Heading.scss';\n\nexport const Heading = ({\n    type,\n    align,\n    className,\n    children,\n}) => {\n    const Type = type;\n\n    return(\n        <Type style={{ textAlign: align }} className={ className }>\n            {children}\n        </Type>\n    )\n}","import React from 'react';\nimport './Sidebar.scss';\n\nimport { Heading } from 'Elements/Heading/Heading';\n\nconst Sidebar = (props) => {\n    let options = { ...props.options };\n\n    const categoryOptions = {\n        topLinkCategory: {\n            none: 'none',\n            default: 'default',\n        },\n        bottomLinkCategory: {\n            none: 'none',\n            default: 'default',\n        },\n        topTagCategory: {\n            none: 'none',\n            default: 'default',\n        },\n        bottomTagCategory: {\n            none: 'none',\n            POS: 'POS',\n        }\n    }\n\n    const handleChange = event => {\n        const itemName = event.target.name;\n        let itemValue;\n\n        switch(event.target.type) {\n            case 'checkbox':\n            case 'radio':\n                itemValue = event.target.checked\n                break;\n            case 'number':\n                itemValue = Number(event.target.value);\n                break;\n            default:\n                itemValue = event.target.value;\n                break;\n        }\n        options = ({ ...options, [itemName]:itemValue});\n        props.updateOptions(options);\n    }\n\n    return (\n        <>\n            <div className={`sidebar ${props.showOptions ? '' : 'sidebar-hidden'}`}>\n                <div className=\"sidebar-container\">\n                    <Heading type=\"h3\">Options</Heading>\n\n                    {/* todo: for a better usability, a form field component (_element) should be created */}\n\n                    <form action=\"\">\n                        {/*  Category Options */}\n                        <div className=\"input-field\">\n                            <label htmlFor=\"topLinkCategory\">Top Link Category</label>\n                            <select name=\"topLinkCategory\" id=\"topLinkCategory\" defaultValue={props.options.topLinkCategory} onChange={handleChange}>\n                                {\n                                    Object.keys(categoryOptions.topLinkCategory).map((key) => {\n                                        return <option key={key} value={key}>{categoryOptions.topLinkCategory[key]}</option>\n                                    })\n                                }\n                            </select>\n                        </div>\n                        <div className=\"input-field\">\n                            <label htmlFor=\"bottomLinkCategory\">Bottom Link Category</label>\n                            <select name=\"bottomLinkCategory\" id=\"bottomLinkCategory\" defaultValue={props.options.bottomLinkCategory} onChange={handleChange}>\n                                {\n                                    Object.keys(categoryOptions.bottomLinkCategory).map((key) => {\n                                        return <option key={key} value={key}>{categoryOptions.bottomLinkCategory[key]}</option>\n                                    })\n                                }\n                            </select>\n                        </div>\n                        <div className=\"input-field\">\n                            <label htmlFor=\"topTagCategory\">Top Tag Category</label>\n                            <select name=\"topTagCategory\" id=\"topTagCategory\" defaultValue={props.options.topTagCategory} onChange={handleChange}>\n                                {\n                                    Object.keys(categoryOptions.topTagCategory).map((key) => {\n                                        return <option key={key} value={key}>{categoryOptions.topTagCategory[key]}</option>\n                                    })\n                                }\n                            </select>\n                        </div>\n                        <div className=\"input-field\">\n                            <label htmlFor=\"bottomTagCategory\">Bottom Tag Category</label>\n                            <select name=\"bottomTagCategory\" id=\"bottomTagCategory\" defaultValue={props.options.bottomTagCategory} onChange={handleChange}>\n                                {\n                                    Object.keys(categoryOptions.bottomTagCategory).map((key) => {\n                                        return  <option key={key} value={key}>{categoryOptions.bottomTagCategory[key]}</option>\n                                    })\n                                }\n                            </select>\n                        </div>\n                        {/* Display Options */}\n                        <div className=\"input-field input-checkbox\">\n                            <input type=\"checkbox\" name=\"compactRows\" id=\"compactRows\" defaultValue={props.options.compactRows} onChange={handleChange}/>\n                            <label htmlFor=\"compactRows\">Compact Rows</label>\n                        </div>\n                        <div className=\"input-field input-checkbox\">\n                            <input type=\"checkbox\" name=\"showTopLinksOnMove\" id=\"showTopLinksOnMove\" defaultValue={props.options.showTopLinksOnMove} onChange={handleChange}/>\n                            <label htmlFor=\"showTopLinksOnMove\">Show Top Links on Move</label>\n                        </div>\n                        <div className=\"input-field input-checkbox\">\n                            <input type=\"checkbox\" name=\"showBottomLinksOnMove\" id=\"showBottomLinksOnMove\" defaultValue={props.options.showBottomLinksOnMove} onChange={handleChange}/>\n                            <label htmlFor=\"showBottomLinksOnMove\">Show Bottom Links on Move</label>\n                        </div>\n                        <div className=\"input-field input-checkbox\">\n                            <input defaultChecked type=\"checkbox\" name=\"showTopMainLabel\" id=\"showTopMainLabel\" defaultValue={props.options.showTopMainLabel} onChange={handleChange}/>\n                            <label htmlFor=\"showTopMainLabel\">Show Top Main Label</label>\n                        </div>\n                        <div className=\"input-field input-checkbox\">\n                            <input type=\"checkbox\" name=\"showTopArgLabels\" id=\"showTopArgLabels\" defaultValue={props.options.showTopArgLabels} onChange={handleChange}/>\n                            <label htmlFor=\"showTopArgLabels\">Show Top Arguments Labels</label>\n                        </div>\n                        <div className=\"input-field input-checkbox\">\n                            <input defaultChecked type=\"checkbox\" name=\"showBottomMainLabel\" id=\"showBottomMainLabel\" defaultValue={props.options.showBottomMainLabel} onChange={handleChange}/>\n                            <label htmlFor=\"showBottomMainLabel\">Show Bottom Main Label</label>\n                        </div>\n                        <div className=\"input-field input-checkbox\">\n                            <input type=\"checkbox\" name=\"showBottomArgLabels\" id=\"showBottomArgLabels\" defaultValue={props.options.showBottomArgLabels} onChange={handleChange}/>\n                            <label htmlFor=\"showBottomArgLabels\">Show Bottom Arguments Labels</label>\n                        </div>\n                        {/* Spacing Options */}\n                        <div className=\"input-field input-field-inline\">\n                            <label htmlFor=\"rowEdgePadding\">Row Edge Padding</label>\n                            <input type=\"number\" name=\"rowEdgePadding\" id=\"rowEdgePadding\" defaultValue={props.options.rowEdgePadding} placeholder=\"0\" onChange={handleChange}/>\n                        </div>\n                        <div className=\"input-field input-field-inline\">\n                            <label htmlFor=\"rowVerticalPadding\">Row Vertical Padding</label>\n                            <input type=\"number\" name=\"rowVerticalPadding\" id=\"rowVerticalPadding\" defaultValue={props.options.rowVerticalPadding} placeholder=\"0\" onChange={handleChange}/>\n                        </div>\n                        <div className=\"input-field input-field-inline\">\n                            <label htmlFor=\"rowExtraTopPadding\">Row Extra Top Padding</label>\n                            <input type=\"number\" name=\"rowExtraTopPadding\" id=\"rowExtraTopPadding\" defaultValue={props.options.rowExtraTopPadding} placeholder=\"0\" onChange={handleChange}/>\n                        </div>\n                        <div className=\"input-field input-field-inline\">\n                            <label htmlFor=\"wordPadding\">Word Padding</label>\n                            <input type=\"number\" name=\"wordPadding\" id=\"wordPadding\" defaultValue={props.options.wordPadding} placeholder=\"0\" onChange={handleChange}/>\n                        </div>\n                        <div className=\"input-field input-field-inline\">\n                            <label htmlFor=\"wordPunctPadding\">Word Point Padding</label>\n                            <input type=\"number\" name=\"wordPunctPadding\" id=\"wordPunctPadding\" defaultValue={props.options.wordPunctPadding} placeholder=\"0\" onChange={handleChange}/>\n                        </div>\n                        <div className=\"input-field input-field-inline\">\n                            <label htmlFor=\"wordTopTagPadding\">Word Top Tag Padding</label>\n                            <input type=\"number\" name=\"wordTopTagPadding\" id=\"wordTopTagPadding\" defaultValue={props.options.wordTopTagPadding} placeholder=\"0\" onChange={handleChange}/>\n                        </div>\n                        <div className=\"input-field input-field-inline\">\n                            <label htmlFor=\"wordBottomTagPadding\">Word Bottom Tag Padding</label>\n                            <input type=\"number\" name=\"wordBottomTagPadding\" id=\"wordBottomTagPadding\" defaultValue={props.options.wordBottomTagPadding} placeholder=\"0\" onChange={handleChange}/>\n                        </div>\n                        <div className=\"input-field input-field-inline\">\n                            <label htmlFor=\"wordTagLineLength\">Word Tag Line Length</label>\n                            <input type=\"number\" name=\"wordTagLineLength\" id=\"wordTagLineLength\" defaultValue={props.options.wordTagLineLength} placeholder=\"0\" onChange={handleChange}/>\n                        </div>\n                        <div className=\"input-field input-field-inline\">\n                            <label htmlFor=\"wordBraceThreshold\">Word Brace Threshold</label>\n                            <input type=\"number\" name=\"wordBraceThreshold\" id=\"wordBraceThreshold\" defaultValue={props.options.wordBraceThreshold} placeholder=\"0\" onChange={handleChange}/>\n                        </div>\n                        <div className=\"input-field input-field-inline\">\n                            <label htmlFor=\"linkSlotInterval\">Link Slot Interval</label>\n                            <input type=\"number\" name=\"linkSlotInterval\" id=\"linkSlotInterval\" defaultValue={props.options.linkSlotInterval} placeholder=\"0\" onChange={handleChange}/>\n                        </div>\n                        <div className=\"input-field input-field-inline\">\n                            <label htmlFor=\"linkHandlePadding\">Link Handle Padding</label>\n                            <input type=\"number\" name=\"linkHandlePadding\" id=\"linkHandlePadding\" defaultValue={props.options.linkHandlePadding} placeholder=\"0\" onChange={handleChange}/>\n                        </div>\n                        <div className=\"input-field input-field-inline\">\n                            <label htmlFor=\"linkCurveWidth\">Link Curve Width</label>\n                            <input type=\"number\" name=\"linkCurveWidth\" id=\"linkCurveWidth\" defaultValue={props.options.linkCurveWidth} placeholder=\"0\" onChange={handleChange}/>\n                        </div>\n                        <div className=\"input-field input-field-inline\">\n                            <label htmlFor=\"linkArrowWidth\">Link Arrow Width</label>\n                            <input type=\"number\" name=\"linkArrowWidth\" id=\"linkArrowWidth\" defaultValue={props.options.linkArrowWidth} placeholder=\"0\" onChange={handleChange}/>\n                        </div>\n                        {/* <div className=\"input-field input-field-inline\">\n                            <label htmlFor=\"tagDefaultColours\">Tag Default Colours</label>\n                            <input type=\"color\" name=\"tagDefaultColours\" id=\"tagDefaultColours\" defaultValue={props.options.tagDefaultColours}/>\n                        </div> */}\n                        {/* <div className=\"text-right\">\n                            <Button type=\"submit\" buttonSize=\"btn-full\">Submit</Button>\n                        </div> */}\n                    </form>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default Sidebar;\n","import React from 'react';\n\nimport './Button.scss';\n\nconst STYLES = ['btn-primary', 'btn-primary-text', 'btn-default', 'btn-default-text', 'btn-black', 'btn-black-text', 'btn-outline'];\nconst SIZES = ['btn-medium', 'btn-small', 'btn-large', 'btn-full', 'unspecified'];\n\nexport const Button = ({\n    children,\n    buttonStyle,\n    buttonSize,\n    loading,\n    className,\n    ...rest\n}) => {\n    const checkButtonStyle = STYLES.includes(buttonStyle) ? buttonStyle : STYLES[0];\n    const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0];\n\n    return (\n        <button\n            className={`${className} btn ${checkButtonStyle} ${checkButtonSize} ${loading === true ? 'loading' : ''}`}\n            {...rest}>\n            {children}\n        </button>\n    )\n};","import React, { useState, useEffect } from 'react';\nimport {Button} from 'Elements/Button/Button';\nimport './Editbar.scss';\n\n// Tags parsers\nimport MultipleMentionsOdin from \"Components/_data/multiple-mentions-odin.json\";\nimport Odin from \"Components/_data/test-odin.json\";\nimport Odin2 from \"Components/_data/test-odin.json\";\nimport ParagraphOdin1 from \"Components/_data/paragraph-1-odin.json\";\nimport PassageOdin1 from \"Components/_data/passage-1-odin.json\";\nimport PassageOdin2 from \"Components/_data/passage-2-odin.json\";\nimport SentenceOdin1 from \"Components/_data/sentence-1-odin.json\";\nimport SentenceOdin2 from \"Components/_data/sentence-2-odin.json\";\nimport SentenceOdin3 from \"Components/_data/sentence-3-odin.json\";\nimport SentenceOdinson1 from \"Components/_data/sentence-odinson-1.json\";\nimport SentenceOdinson2 from \"Components/_data/sentence-odinson-2.json\";\n\nlet init = false;\nconst Editbar = (props) => {\n    const initialParser = ['Odin', Odin];\n    const [activeParser, setActiveParser] = useState(initialParser[0]);\n    const [activeDataParser, setActiveDataParser] = useState(JSON.stringify(initialParser[1], undefined, 4));\n\n\n    useEffect((props) => {\n        if (!init) {\n            props.updateParser(JSON.parse(activeDataParser));\n            init = true;\n        }\n    }, [activeDataParser]);\n\n    const tagParsers = {\n        MultipleMentionsOdin: 'Multiple Mentions Odin',\n        Odin: 'Odin ',\n        Odin2: 'Odin 2',\n        ParagraphOdin1: 'Paragraph Odin 1',\n        PassageOdin1: 'Passage Odin 1',\n        PassageOdin2: 'Passage Odin 2',\n        SentenceOdin1: 'Sentence Odin 1',\n        SentenceOdin2: 'Sentence Odin 2',\n        SentenceOdin3: 'Sentence Odin 3',\n        SentenceOdinson1: 'Sentence Odinson 1',\n        SentenceOdinson2: 'Sentence Odinson 2',\n    }\n\n    const changeParser = (e) => {\n        init = false;\n        setActiveParser(e.target.value);\n        // eslint-disable-next-line default-case\n        switch(e.target.value) {\n            case 'MultipleMentionsOdin':\n                setActiveDataParser(JSON.stringify(MultipleMentionsOdin, undefined, 4));\n                break;\n            case 'Odin':\n                setActiveDataParser(JSON.stringify(Odin, undefined, 4));\n                break;\n            case 'Odin2':\n                setActiveDataParser(JSON.stringify(Odin2, undefined, 4));\n                break;\n            case 'ParagraphOdin1':\n                setActiveDataParser(JSON.stringify(ParagraphOdin1, undefined, 4));\n                break;\n            case 'PassageOdin1':\n                setActiveDataParser(JSON.stringify(PassageOdin1, undefined, 4));\n                break;\n            case 'PassageOdin2':\n                setActiveDataParser(JSON.stringify(PassageOdin2, undefined, 4));\n                break;\n            case 'SentenceOdin1':\n                setActiveDataParser(JSON.stringify(SentenceOdin1, undefined, 4));\n                break;\n            case 'SentenceOdin2':\n                setActiveDataParser(JSON.stringify(SentenceOdin2, undefined, 4));\n                break;\n            case 'SentenceOdin3':\n                setActiveDataParser(JSON.stringify(SentenceOdin3, undefined, 4));\n                break;\n            case 'SentenceOdinson1':\n                setActiveDataParser(JSON.stringify(SentenceOdinson1, undefined, 4));\n                break;\n            case 'SentenceOdinson2':\n                setActiveDataParser(JSON.stringify(SentenceOdinson2, undefined, 4));\n                break;\n        }\n    }\n\n    const changeTextarea = (e) => {\n        setActiveDataParser(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        props.updateParser(JSON.parse(activeDataParser));\n    }\n\n    return (\n        <>\n            <div className={`editbar ${props.showEditbar ? '' : 'editbar-hidden'}`}>\n                <div className=\"editbar-top\">\n                    <div className=\"container\">\n                        <div className=\"input-field\">\n                            <label htmlFor=\"parserSelector\">Parser Selector</label>\n                            <select name=\"parserSelector\" id=\"parserSelector\" onChange={ changeParser } defaultValue={activeParser}>\n                                {\n                                    Object.keys(tagParsers).map((key) => {\n                                        return <option key={key} value={key}>{tagParsers[key]}</option>\n                                    })\n                                }\n                            </select>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"editbar-container\">\n                    <Button className=\"editbar-btn\" buttonSize=\"btn-small\" onClick={ handleSubmit }>SAVE JSON</Button>\n                    <textarea className=\"editbar-textarea\"\n                              value={ activeDataParser }\n                              onChange={ changeTextarea }\n                    />\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default Editbar;\n","import React, { useState, useRef } from 'react';\nimport Tag from 'Components/_elements/Tag/Tag';\nimport Sidebar from 'Components/_modules/Sidebar/Sidebar';\nimport Editbar from 'Components/_modules/Editbar/Editbar';\nimport { Button } from 'Elements/Button/Button';\nimport { Heading } from 'Elements/Heading/Heading';\n\nimport './Home.scss';\n\nconst Home = () => {\n    const sidebarAnimationDuration = 400;\n    const [showOptions, setShowOptions] = useState(true);\n    const [showEditbar, setShowEditbar] = useState(true);\n    const [tagOptions, setTagOptions] = useState({\n        topLinkCategory: \"default\",\n        bottomLinkCategory: \"none\",\n        topTagCategory: \"default\",\n        bottomTagCategory: \"POS\",\n        compactRows: false,\n        showTopLinksOnMove: false,\n        showBottomLinksOnMove: false,\n        showTopMainLabel: true,\n        showTopArgLabels: false,\n        showBottomMainLabel: true,\n        showBottomArgLabels: false,\n        rowEdgePadding: 10,\n        rowVerticalPadding: 20,\n        rowExtraTopPadding: 10,\n        wordPadding: 10,\n        wordPunctPadding: 2,\n        wordTopTagPadding: 10,\n        wordBottomTagPadding: 0,\n        wordTagLineLength: 9,\n        wordBraceThreshold: 100,\n        linkSlotInterval: 40,\n        linkHandlePadding: 2,\n        linkCurveWidth: 5,\n        linkArrowWidth: 5,\n        tagDefaultColours: [\"#ff3366\"]\n    });\n    const [activeParser, setActiveParser] = useState();\n\n    const tagRef = useRef();\n\n    // Toggle Options (filters) from Sidebar\n    const toggleOptions = () => {\n        setShowOptions(!showOptions);\n\n        // trigger redraw after the sidebar animation is done\n        setTimeout(() => {\n            tagRedraw();\n        }, sidebarAnimationDuration);\n    }\n\n    // Toggle Editbar\n    const toggleEditbar = () => {\n        setShowEditbar(!showEditbar);\n\n        // trigger redraw after the sidebar animation is done\n        setTimeout(() => {\n            tagRedraw();\n        }, sidebarAnimationDuration);\n    }\n\n    const tagRedraw = () => {\n        tagRef.current.redraw();\n    }\n\n    const updateOptions = options => {\n        setTagOptions({...tagOptions, ...options});\n    }\n\n    const updateParser = options => {\n        setActiveParser(options);\n    }\n\n    return (\n        <>\n            <Sidebar\n                options={ tagOptions } \n                showOptions={ showOptions }\n                updateOptions={updateOptions.bind(this)}\n            />\n            <Editbar\n                showEditbar={ showEditbar }\n                updateParser={updateParser.bind(this)}\n            />\n            <main>\n                <div className=\"header\">\n                    <div className=\"container\">\n                        <Heading type=\"h2\" className=\"heading-button\">\n                            TAG Example\n                            <div>\n                                <Button onClick={ toggleOptions } buttonStyle=\"btn-default\" buttonSize=\"btn-small\">\n                                    { showOptions ? 'Hide' : 'Show' } Options <i className=\"fas fa-bars\"/>\n                                </Button>\n                                <Button onClick={ toggleEditbar } buttonStyle=\"btn-default\" buttonSize=\"btn-small\">\n                                    { showEditbar ? 'Hide' : 'Show' } Editbar <i className=\"fas fa-bars\"/>\n                                </Button>\n                            </div>\n                        </Heading>\n                    </div>\n                </div>\n                <div className=\"container\">\n                    <Tag \n                        ref={ tagRef }\n                        data={ activeParser }\n                        options={ tagOptions }\n                    />\n                </div>\n            </main>\n        </>\n    )\n\n};\n\nexport default Home;","import React from 'react';\nimport {BrowserRouter, Routes, Route} from 'react-router-dom';\n\n// *** Layouts ***\nimport BasicLayout from 'Layouts/BasicLayout/BasicLayout';\n\n// *** Pages ***\nimport Home from 'Pages/Home/Home';\n\nconst AppRouter = () => {\n    return (\n        <BrowserRouter>\n            <Routes>\n                <Route path='/' element={<BasicLayout />}>\n                    <Route path='/' element={<Home />} />\n                </Route>\n            </Routes>\n        </BrowserRouter>\n    );\n};\n\nexport default AppRouter;\n","import React from \"react\";\nimport './App.scss';\nimport AppRouter from \"./AppRouter\";\n\nfunction App() {\n  return (\n    <>\n        <AppRouter />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);"],"sourceRoot":""}